JS用語

use strict:  scriptタグの中に文字列で記載することでブラウザが厳密なエラーチェックをしてくれる 。

(add)EventListener():  イベントが起きたら何らかの処理をしてくれる。

createElement():  HTML要素を生成

appendChild():  特定の親ノードの子ノードリストの末尾にノードを追加する。追加しようとしたノードが既に存在していたら、それは現在の親ノードから除かれ、新しい親ノードに追加される

textContent:  Nodeのプロパティで、ノードおよびその子孫のテキストの内容を表す。
: innerTextとの違い:  	•textContent は、 <script> と <style> 要素を含む、すべての要素の内容を取得する。一方、 innerText は「人間が読める」要素のみを示す。

Math.floor:  指定された数値以下の最大の整数を表す数値。

Math.ramdom:  与えられた数の中からランダムに数字を選んでくれる

’’(シングルクウォート)と“”(ダブルクウォート)の違い:  ‘’内では通常’を使うことができない

JSでは+以外の演算子を使うとnumber型とstring型の組み合わせでも通常通り計算できる。


テンプレートリテラル:  文字列を入力するときに’’や””ではなく、バッククウォート``で囲むこと。この中にはプレースホルダー${}を含めることができ、変数や関数を入れる事ができる。

contenue:  for文の中で使われ、ループのスキップができる
            例  for(let i = 0; i < 10; i++) {
                             if(i === 4) {
					 continue;
						}
                      		}
					これで i === 4のときはスキップされる
braek:  contenueと同じ条件下で発動しcontinueと違いそこで処理が終了される。

splice:  配列要素でインデックスの削除・追加ができる
        具体的には、
        splice(対象インデックスを指定, 対象インデックスから何個削除するか指定, 第3引数以降に記入するとすべて要素の追加に働く)
        
        例  
        const scores = [10, 20, 30, 40, 50];
              scores.splice(1, 3, 200, 600);
              console.log(scores);
              
              結果  score[10, 200, 600, 50]

スプレット構文:  配列内に別の配列を展開した状態で追加できる
                 例  const other = [200, 600];
                                    const scores = [10, 20, 30, 40, 50, …other];
         					console.log(scores);
                        
						結果  score[10, 20, 30, 40, 50, 200, 600]

分割代入:  配列の中に配列を作り、分割して代入できる
            例  const scores = [10, 20, 30, 40];
                             const [a, b, …other] = scores
                             console.log(scores)
                             結果  score[10, 20, other[30, 40]]
                

              

